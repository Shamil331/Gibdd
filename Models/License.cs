//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gibdd.Models
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    
    public partial class License
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public License()
        {
            this.License_Categories = new HashSet<License_Categories>();
            this.Status_History = new HashSet<Status_History>();
        }
    
        public int Id { get; set; }
        public Nullable<System.DateTime> License_Date { get; set; }
        public Nullable<System.DateTime> Expire_Date { get; set; }
        public Nullable<int> License_Series { get; set; }
        public Nullable<int> License_Number { get; set; }
        public string Status { get; set; }
        public Nullable<int> Driver_Id { get; set; }

        public string License_Date_short
        {
            get { return this.License_Date.Value.ToShortDateString(); }
        }

        public string Expire_Date_short
        {
            get { return this.Expire_Date.Value.ToShortDateString(); }
        }

        public string Driver_Surname
        {
            get { return this.Driver.Surname; }
        }
        
        public string Driver_Name
        {
            get { return this.Driver.Name+" "; }
        }

        public string Driver_MiddleName
        {
            get { return this.Driver.Middle_Name; }
        }

        public string SeriesAndNumber
        {
            get 
            {
                string result;
                string series = this.License_Series.ToString();
                StringBuilder sb = new StringBuilder();
                foreach (var chr in series)
                {
                    if (sb.Length == 2)
                        sb.Append(" ");
                    sb.Append(chr);
                }
                result = sb.ToString()+" "+this.License_Number.ToString();
                return result;
            }
        }

        public string Categories
        {
            get
            {
                string result = "";
                ICollection<Models.License_Categories> license_Categories = this.License_Categories;
                foreach (var i in license_Categories)
                {
                    result+=i.Categories.Name+" ";
                }
                return result;
            }
        }

        public string ImagePath
        {
            get { return this.Driver.ImagePath; }
        }
        public virtual Driver Driver { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<License_Categories> License_Categories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Status_History> Status_History { get; set; }
    }
}
